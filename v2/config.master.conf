#!/bin/bash


# Part of the command and control system of WaterCuff, for lack of a better option.
#
# This file: reads config.ini file and computes environment variables to pass to 
# the python, shell scripts or node.js execs.
#
# NOTE: made to work in collaboration with 'db' scripts for database management.


# environment variables that can overwrite config.ini:
#   * _ENV, _CONFIG, _SHOW, _SYS, _VER

# --------------------------------------------------------------------- 
# User settable 
# --------------------------------------------------------------------- 

#CONFIGBASE='WATERCUFFSYS'

ComputeDBName() {
    appname="$1";
    sys="$2";
    environment="$3";
    dbver="$4";
    retval=""$appname"_"$sys"_"$environment"_$dbver";
    echo $retval
    return 0
}
ComputeLDBName() {
    appname="$1";
    sys="$2";
    environment="$3";
    dbver="$4";
    lsid="$5";
    retval=""$appname"_"$lsid"_"$sys"_"$environment"_$dbver";
    echo $retval
    return 0
}

ComputeDBLoadFile() {
    configdir="$1";
    basedir="$2";
    dbver="$3";
    sys="$4";
    retval=`dirname $configdir`"/"$basedir"/ver"$dbver"/load_"$sys
    echo $retval
    return 0
}

# --------------------------------------------------------------------- 
# Application invariant stuff below. i.e. don't change
# --------------------------------------------------------------------- 

# Get ENV and CONFIG env variables, to load and compute other environment variables.
CONFIGLOC=$CONFIGBASE"_CONFIG"
CONFIGENV=$CONFIGBASE"_ENV"
CONFIGSHOW=$CONFIGBASE"_SHOW"
CONFIGSYS=$CONFIGBASE"_SYS"
CONFIGVER=$CONFIGBASE"_VER"
CONFIGLSID=$CONFIGBASE"_LSID"
EXITEARLY=0

if [ -z "${!CONFIGLOC}" ] ; then
    printf "ERROR: Need to set environment variable '$CONFIGLOC' to point to 'config.ini' file. ex. '../config.ini'.\n"
    EXITEARLY=1
fi
if [ -z "${!CONFIGSYS}" ] ; then
    printf "ERROR: Need to set environment variable '$CONFIGSYS' to define 'CCOM' or 'LCOM' system identifier.\n"
    EXITEARLY=1
fi
if [ "$EXITEARLY" == "1" ] ; then
    exit 1
fi

# --------------------------------------------------------------------- 
# Read in variables form config.ini file
# --------------------------------------------------------------------- 

if [ -n "${!CONFIGSHOW}" ] ; then
    echo " * reading environment variable '$CONFIGLOC' for 'config.ini' location."
    echo " * reading config file '${!CONFIGLOC}'"
fi
if [ ! -f "${!CONFIGLOC}" ] ; then
    echo "ERROR: No config file named ${!CONFIGLOC}"
    exit 1
fi
DB_CONFIG_APPNAME=`eval "php -r 'echo parse_ini_file("'"'${!CONFIGLOC}'"'")["'"'"appname"'"'"]"";'"`
#DB_CONFIG_LSID=`eval "php -r 'echo parse_ini_file("'"'${!CONFIGLOC}'"'")["'"'"lsid"'"'"]"";'"`
DB_CONFIG_ENVIRONMENT=`eval "php -r 'echo parse_ini_file("'"'${!CONFIGLOC}'"'")["'"'"environment"'"'"]"";'"`
DB_CONFIG_DBLOADDIR=`eval "php -r 'echo parse_ini_file("'"'${!CONFIGLOC}'"'",true)["'"'"DB"'"'"]["'"'"loaddir"'"'"]"";'"`
DB_CONFIG_VER=`eval "php -r 'echo parse_ini_file("'"'${!CONFIGLOC}'"'")["'"'"version"'"'"]"";'"`
DB_CONFIG_USER=`eval "php -r 'echo parse_ini_file("'"'${!CONFIGLOC}'"'",true)["'"'"DB"'"'"]["'"'"user"'"'"]"";'"`




#echo "sadfadsfasdf '${!CONFIGSYS}'"
#A=${!CONFIGSYS}
#B=`eval "php -r 'echo parse_ini_file("'"'${!CONFIGLOC}'"'",true);'"`
#DB_CONFIG_SYS=`eval "php -r 'echo parse_ini_file("'"'${!CONFIGLOC}'"'",true)["'"'"$A"'"'"]["'"'"sys"'"'"]"";'"`
#echo "B: $DB_CONFIG_SYS"
#DB_CONFIG_SYS=`eval "php -r 'echo parse_ini_file("'"'${!CONFIGLOC}'"'",true)["$A"]["'"'"sys"'"'"]"";'"`
#echo "sadfadsfasdf"



# --------------------------------------------------------------------- 
# System environment variables override config.ini settings
# --------------------------------------------------------------------- 
if [ -n "${!CONFIGENV}" ] ; then
    export DB_CONFIG_ENVIRONMENT=${!CONFIGENV}
    if [ -n "${!CONFIGSHOW}" ] ; then
        echo " * using environment variable environment setting"
    fi
else
    if [ -n "${!CONFIGSHOW}" ] ; then
        echo " * using config.ini's environment setting"
    fi
fi
if [ -n "${!CONFIGVER}" ] ; then
    export DB_CONFIG_VER=${!CONFIGVER}
    if [ -n "${!CONFIGSHOW}" ] ; then
        echo " * using environment variable 'ver' setting"
    fi
fi
if [ -n "${!CONFIGLSID}" ] ; then
    export DB_CONFIG_LSID=${!CONFIGLSID}
    if [ -n "${!CONFIGSHOW}" ] ; then
        echo " * using environment variable 'lsid' setting"
    fi
fi

#echo "DB_CONFIG_LSID '$DB_CONFIG_LSID'"
#echo "CONFIGSYS      '${!CONFIGSYS}'"
#if [ -n "$DB_CONFIG_LSID" ] ; then
#    echo "1"
#fi
#if [ "$DB_CONFIG_LSID" == "" ] ; then
#    echo "2"
#fi
if [ "${!CONFIGSYS}" == "LCOM" ] ; then
    if [ "$DB_CONFIG_LSID" == "" ] ; then
        printf "ERROR: Need to set environment variable '$CONFIGLSID' to define local system identifier.\n"
        exit 1
    fi
fi


# --------------------------------------------------------------------- 
# Exporting -
#   - single location for exporting variables to previous shell
# --------------------------------------------------------------------- 
export DB_CONFIG_LOC=${!CONFIGLOC}
export DB_CONFIG_ENVIRONMENT
export DB_CONFIG_APPNAME
#export DB_CONFIG_LSID                      # local system id
export DB_CONFIG_SYS=${!CONFIGSYS}       # local system id
export DB_CONFIG_VER
export DB_CONFIG_LSID
export DB_CONFIG_USER
export DB_CONFIG_DBDIR=`dirname ${!CONFIGLOC}`"/$DB_CONFIG_DBLOADDIR""/ver$DB_CONFIG_VER"

# Local systems have an lsid
if [ "${!CONFIGSYS}" == "LCOM" ]; then
    export DB_CONFIG_DBNAME=$(ComputeLDBName $DB_CONFIG_APPNAME $DB_CONFIG_SYS $DB_CONFIG_ENVIRONMENT $DB_CONFIG_VER $DB_CONFIG_LSID)
else
    export DB_CONFIG_DBNAME=$(ComputeDBName $DB_CONFIG_APPNAME $DB_CONFIG_SYS $DB_CONFIG_ENVIRONMENT $DB_CONFIG_VER)
fi



# --------------------------------------------------------------------- 
# Show all set variables
# --------------------------------------------------------------------- 
if [ -n "${!CONFIGSHOW}" ] ; then
    echo "  DB_CONFIG_LOC         : $DB_CONFIG_LOC"
    echo "  DB_CONFIG_ENVIRONMENT : $DB_CONFIG_ENVIRONMENT"
    echo "  DB_CONFIG_APPNAME     : $DB_CONFIG_APPNAME"
    echo "  DB_CONFIG_VER         : $DB_CONFIG_VER"
    echo "  DB_CONFIG_USER        : $DB_CONFIG_USER"
    echo "  DB_CONFIG_LSID        : $DB_CONFIG_LSID"
    echo "  DB_CONFIG_DBNAME      : $DB_CONFIG_DBNAME"
    echo "  DB_CONFIG_SYS         : $DB_CONFIG_SYS"
    echo "  DB_CONFIG_DBDIR       : $DB_CONFIG_DBDIR"
fi

