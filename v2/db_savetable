#!/bin/bash


ErrorOut() {
    retval=1
    echo "ERROR: .... stuff"
    echo "   $*"
    DisplayOptions $0
}

DisplayOptions() {
	echo "Usage: "`basename $0`" [-q] [environment] [version] [table] (where)"
	echo "---------------------------------------------------------------------"
	echo "  Saves current database to a file in dumps directory. Defaults to "
	echo "  configuration, but can set environment and version information."
	echo "     ex. $0 development 4 FlowData     exports to "$APPNAME"_development_4's FlowData table"
	echo "     ex. $0 development 4 FlowData \"user='jimf'\"    exports to "$APPNAME"_development_4's FlowData table with the given where condition"
    echo
	echo "   -q : quiet... don't print stuff."
	echo
}


# Load settings
cwd=`pwd`"/."
p=`dirname $cwd`
#source $p/_dbsettings


# --------------------------------------------------------------------- 
# Handle command line, and import config.conf
# --------------------------------------------------------------------- 
silent=0
sys=""
while [ "`echo $1 | cut -c 1`" == "-" ]; do
    if [ "$1" == "-h" -o "$1" == "--help" ]; then
        DisplayOptions $*
    elif [ "$1" == "-q" -o "$1" == "--quiet" ]; then
        silent=1
        unset WATERCUFFSYS_SHOW
        # NOTE: need to not call WATERCUFFSYS, but the parent variable name, or use command line arguments
#        shift 
#    elif [ "$1" == "-s" -o "$1" == "--sys" ]; then
#        shift 
#        sys="$1"
    else
        echo "ERROR: unknown argument '$1'"
        ErrorOut
    fi
    shift
done

if [ $# -le 2 ]; then
    echo "ERROR: Bad arguments"
    ErrorOut
fi


# --------------------------------------------------------------------- 
# Configure DBTool's variables
# --------------------------------------------------------------------- 
if [ $# -ge 2 ]; then
    export WATERCUFFSYS_ENV=$1
    export WATERCUFFSYS_VER=$2
    shift
    shift
fi
#echo " ($WATERCUFFSYS_ENV) ($WATERCUFFSYS_VER) "
. db_config $sys --

# --------------------------------------------------------------------- 
# Set TABLE var
# Set WHERE var
# --------------------------------------------------------------------- 
export TABLE=$1
export WHERE=""
if [ $# -gt 1 ]; then
    export WHERE="--where=$2"
fi

D=`date +%Y_%m_%d_%H_%M_%S`
hostname=`hostname -f`

if [ $silent != 1 ]; then

	echo ""
	echo " Settings..."
	echo "---------------------------------------------------------------------"
	echo "   DBVER : $DB_CONFIG_VER"
	echo "  DBNAME : $DB_CONFIG_DBNAME"
    echo "   TABLE : $TABLE"
    echo "   WHERE : $WHERE"
	echo " hostname: $hostname"
	echo ""
fi


echo "-- ---------------------------------------------------------------------"
echo "--  db_savetable : $TABLE"
echo "--         where : $WHERE"
echo "--            on : $D"
echo "--         DBVER : $DB_CONFIG_VER"
echo "--        DBNAME : $DB_CONFIG_DBNAME"
echo "--       hostname: $hostname"
echo "-- ---------------------------------------------------------------------"
echo ""


#echo "mysqldump --defaults-file=./.my.cnf $WHERE $DB_CONFIG_DBNAME $TABLE"
mysqldump --defaults-file=./.my.cnf $WHERE $DB_CONFIG_DBNAME $TABLE
#mysqldump --defaults-file=./.my.cnf --where="id>10000" $DB_CONFIG_DBNAME $TABLE
if [ $? == 0 ]; then
	if [ $silent != 1 ]; then
		echo "Success"
	fi
else 
	if [ $silent != 1 ]; then
		echo "Failed"
		exit 1
	fi
fi
